{"version":3,"sources":["components/Searchbar.jsx","components/ImageGalleryItem.jsx","components/ImageGallery.jsx","components/Button.jsx","components/Modal.jsx","services/PixabayApi.js","App.js","index.js"],"names":["Searchbar","state","input","inputHandler","e","setState","currentTarget","value","submitHandler","preventDefault","toast","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","pictureClickHandler","handler","largeSrc","alt","src","onClick","ImageGallery","images","map","id","webformatURL","largeImageURL","tags","Button","text","Modal","url","apiKey","api","searchValue","page","a","fetch","response","json","App","result","pending","modalAtributes","fetchImages","then","total","warn","prevState","hits","catch","error","console","log","finally","formHandler","window","addEventListener","closeModal","target","code","removeEventListener","pverProps","length","color","height","width","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0aeffdb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    input: '',\r\n  };\r\n\r\n  inputHandler = e => {\r\n    this.setState({\r\n      input: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.input === '') return toast('Type what you would like to find');\r\n\r\n    this.props.onSubmit(this.state.input);\r\n    this.setState({ input: '' });\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.submitHandler}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.inputHandler}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  pictureClickHandler = () => {\r\n    const { handler, largeSrc, alt } = this.props;\r\n    handler(largeSrc, alt);\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return (\r\n      <li className=\"ImageGalleryItem\" onClick={this.pictureClickHandler}>\r\n        <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  alt: PropTypes.string,\r\n  handler: PropTypes.func,\r\n  largeSrc: PropTypes.string,\r\n  src: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nexport default function ImageGallery({ images, handler }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n        return <ImageGalleryItem key={id} src={webformatURL} largeSrc={largeImageURL} alt={tags} handler={handler} />;\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  handler: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ text, onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Modal({ url, alt, onClick }) {\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClick}>\r\n      <div className=\"Modal\">\r\n        <img src={url} alt={alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  alt: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  url: PropTypes.string,\r\n};\r\n","const apiKey = '23951184-b06d9454dd7ae17cb77deccea';\r\n\r\nexport default async function api(searchValue, page) {\r\n  const response = await fetch(\r\n    `https://pixabay.com/api/?q=${searchValue}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return await response.json();\r\n}\r\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport api from './services/PixabayApi';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass App extends Component {\n  state = {\n    searchValue: '',\n    page: 1,\n    result: [],\n    pending: false,\n    modalAtributes: [],\n  };\n\n  componentDidUpdate(pverProps, prevState) {\n    if (prevState.searchValue !== this.state.searchValue) this.fetchImages();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModal);\n  }\n\n  fetchImages = () => {\n    const { searchValue, page } = this.state;\n\n    this.setState({ pending: true });\n\n    api(searchValue, page)\n      .then(response => {\n        if (response.total === 0) toast.warn('Could not find images with that name');\n\n        this.setState(prevState => ({\n          result: [...prevState.result, ...response.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => console.log(error))\n      .finally(() => this.setState({ pending: false }));\n  };\n\n  formHandler = value => {\n    this.setState({\n      searchValue: value,\n      result: [],\n      page: 1,\n    });\n  };\n\n  pictureClickHandler = (url, tags) => {\n    this.setState({ modalAtributes: [url, tags] });\n    window.addEventListener('keydown', this.closeModal);\n  };\n\n  closeModal = e => {\n    if (e.currentTarget === e.target) this.setState({ modalAtributes: [] });\n    if (e.code === 'Escape') this.setState({ modalAtributes: [] });\n    window.removeEventListener('keydown', this.closeModal);\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.formHandler} />\n        <ImageGallery images={this.state.result} handler={this.pictureClickHandler} />\n\n        {this.state.result.length > 0 && <Button text=\"Load more\" onClick={this.fetchImages} />}\n\n        {this.state.pending && <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} className=\"Loader\" />}\n\n        {this.state.modalAtributes.length > 0 && (\n          <Modal url={this.state.modalAtributes[0]} alt={this.state.modalAtributes[1]} onClick={this.closeModal} />\n        )}\n\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}